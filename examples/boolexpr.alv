(def t (a b) a)
(def f (a b) b)
(def AND (a b) (a b f))
(def OR (a b) (a t b))
(def NOT (a) (a f t))
(def NOR (a b) (NOT (OR a b)))
(def NAND (a b) (NOT (AND a b)))

(def b> (expr)
  (cond
    ((== expr 't') t)
    ((== expr 'f') f)             
    ((== (car expr) '&') (AND (b> (ref expr 1)) (b> (ref expr 2))))
    ((== (car expr) '|') (OR (b> (ref expr 1)) (b> (ref expr 2))))
    ((== (car expr) '~') 
      (cond
        ((== (ref expr 1) '|') (NOR (b> (ref expr 2)) (b> (ref expr 3))))
        ((== (ref expr 1) '&') (NAND (b> (ref expr 2)) (b> (ref expr 3))))
        (else (NOT (b> (ref expr 1))))))
    (else expr)))



(repeat 10 (show (b> (usrin boolexpr> ))))
