(def t (a b) a)
(def f (a b) b)
(def AND (a b) (a b f))
(def OR (a b) (a t b))
(def NOT (a) (a f t))

(def eval1 (expr)
  (cond
    ((== expr 't') t)
    ((== expr 'f') f)
    ((== (car expr) '~') (NOT (eval1 (ref expr 1))))
    ((== (ref expr 1) '&') (AND (eval1 (car expr)) (eval1 (cdr (cdr expr)))))
    ((== (ref expr 1) '|') (OR (eval1 (car expr)) (eval1 (cdr (cdr expr)))))
    ((== (ref expr 1) '=') (set (car expr) (eval1 (cdr (cdr expr)))))
    (else expr)))



(repeat 10 (show (eval1 (usrin boolexpr> ))))
