(def mult (a b) 
  (cond ((eqv? a 1) b) 
        (else (+ b (mult (- a 1) b)))))

(quote (mult 4 5))
(mult 4 5)


(def factorial (n) 
  (cond ((<= n 1) 1) 
        (else (* n (factorial (- n 1))))))

(quote (factorial 5))
(factorial 5)


(def length (l) 
  (cond ((null? l) 0) 
        (else (+ 1 (length (cdr l))))))

(quote (length (0 1 2 3 4 5)))
(length (0 1 2 3 4 5))


(quote (python 3 + 5))
python 3 + 5


(quote until)
(until ((== i 6) 0 (update i (++ i))) (** i 2))


(quote set)
(set a 2)
a

(repeat 3 (update a (** a 2)))
a
