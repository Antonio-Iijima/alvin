(set a 0)

(cond 
    ((eq a 1) 0)
    (else 1))


(repeat 10 (update a (++ a)))


(set i 0)
(until ((== i 6) (update i (++ i))) (show (** i 2)))


(let ((a 1) (b 2) (c 3)) (+ a (* b c)))


(do ((set a 3) (set b (* a 5)) (set a (- b 2))) (a b))


(eval '(+ 1 2))


(set file (getfile ../examples/input.alv))


(load ../examples/input.alv)


(import math)
(math.pi)


(global a 1)
(global a)
